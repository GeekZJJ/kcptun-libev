#!/bin/sh /etc/rc.common

START=99

USE_PROCD=1
# PROCD_DEBUG=0

kcptun_libev_confdir=/var/etc/kcptun-libev

append_json_string_if_neq() {
	local section="$1"
	local option="$2"
	local key="$3"
	local compare="$4"
	local _loctmp
	config_get _loctmp "$section" "$option"
	[ -n "$_loctmp" ] || return 0
	[ "$_loctmp" != "$compare" ] || return 0
	json_add_string "$key" "$_loctmp"
}

append_json_int_if_neq() {
	local section="$1"
	local option="$2"
	local key="$3"
	local compare="$4"
	local _loctmp
	config_get _loctmp "$section" "$option"
	[ -n "$_loctmp" ] || return 0
	[ "$_loctmp" != "$compare" ] || return 0
	json_add_int "$key" "$_loctmp"
}

start_kcptun_libev() {
	local listen
	local kcp_connect
	local enable
	local cfg="$1"
	local confjson="$kcptun_libev_confdir/kcptun_libev_$cfg.json"

	config_get_bool enable $1 enable
	[ "$enable" = 1 ] || return 0

	config_get listen $1 listen ""
	[ -z "$listen" ] && logger -s "error no listen" && return 0

	config_get kcp_connect $1 kcp_connect ""
	[ -z "$kcp_connect" ] && logger -s "error no kcp_connect" && return 0

	json_init
	json_add_string listen "$listen"
	json_add_string kcp_connect "$kcp_connect"
	json_add_object kcp
	append_json_int_if_neq $1 kcp_mtu "mtu" ""
	append_json_int_if_neq $1 kcp_sndwnd "sndwnd" ""
	append_json_int_if_neq $1 kcp_rcvwnd "rcvwnd" ""
	append_json_int_if_neq $1 kcp_nodelay "nodelay" ""
	append_json_int_if_neq $1 kcp_interval "interval" ""
	append_json_int_if_neq $1 kcp_resend "resend" ""
	append_json_int_if_neq $1 kcp_nc "nc" ""
	json_close_object
	json_add_object udp
	append_json_int_if_neq $1 udp_sndbuf "sndbuf" ""
	append_json_int_if_neq $1 udp_rcvbuf "rcvbuf" ""
	append_json_int_if_neq $1 udp_session_timeout "session_timeout" ""
	json_close_object
	json_add_int loglevel "5"
	json_dump -i >"$confjson"

	procd_open_instance "kcptun_libev_$cfg"
	procd_set_param command /usr/bin/kcptun-libev -c "$confjson"
	procd_set_param limits nofile="2048 2048"
	procd_set_param file "$confjson"
	procd_set_param respawn
	procd_close_instance
}

service_triggers() {
	procd_add_reload_trigger "kcptun_libev"
}

start_service() {
	mkdir -p "$kcptun_libev_confdir"
	config_load kcptun-libev
	config_foreach start_kcptun_libev kcptun_libev
}

reload_service() {
	stop
	start
}
